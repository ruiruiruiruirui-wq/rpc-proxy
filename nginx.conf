user root;
pcre_jit on;

worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65535;

events {
    use epoll;
    worker_connections  8192;
}

# openapi key
env COINGECKO_API_KEY;
env SOLSCAN_API_KEY;
env SOLSCAN_V2_API_KEY;
env TENDERLY_MAINNET_TOKEN;
env TENDERLY_SEPOLIA_TOKEN;
env TENDERLY_ARBITRUM_TOKEN;
env TENDERLY_AVALANCHE_TOKEN;
env TENDERLY_BASE_MAINNET_TOKEN;
env TENDERLY_OPTIMISM_MAINNET_TOKEN;
env TENDERLY_POLYGON_MAINNET_TOKEN;
env TENDERLY_BLAST_TOKEN;
env TENDERLY_METIS_ANDROMEDA_TOKEN;
env TENDERLY_MANTLE_TOKEN;
env BLOCKIN_API_KEY;
env SUBSCAN_API_KEY;
env APTOSLABS_API_KEY;
env INCH_API_KEY;
env JPUSH_BASIC_AUTH;
env ZEROx_API_KEY;
env BLOCKAID_API_KEY;
env CONFLUXSCAN_API_KEY;
env DAPPRADAR_API_KEY;
env SOCKET_API_KEY;
env AVE_API_KEY;
env ALCHEMY_API_KEY;
env BLOCKFROST_API_KEY;
env SECRETNETWORK_TOKEN;
env BLOCKFNATIVE_API_KEY;
env THORSWAP_API_KEY;
env GETBLOCK_API_KEY;
env UNISAT_API_KEY;
env UNISAT_API_KEY1;
env BLOCKBERRY_API_KEY_ROUTE;
env NOWNODES_API_KEY_ROUTE;
env UNISAT_TESTNET_API_KEY;
env INFURA_API_KEY;
env DODO_API_KEY;
env SUMSUB_APP_TOKEN;
env SUMSUB_SECRET_KEY;
env CHANGE_HERO_API_KEY;
env GOPLUS_SIGN_APP_KEY;
env GOPLUS_SIGN_APP_SECRET;
env API_COVALENTHQ_COM_KEY;
env APIS_MINTSCAN_IO_KEY;
env BIRDEYE_API_KEY;
env APTOSLABS_API_KEY;
env SUI_QUICKNODE_KEY;
env REVENUECAT_V1_API_KEY;
env REVENUECAT_API_KEY;
env MORPHO_API_KEY;
env ONRAMPER_API_KEY;
env MIXPANEL_UTILITY_BASIC_AUTH;
env SCAMSNIFFER_API_KEY;
env OKX_SECRET_KEY;
env OKX_ACCESS_PROJECT;
env OKX_ACCESS_KEY;
env OKX_ACCESS_PASSPHRASE;

# rpc key
env DRPC_API_KEY;
env RPC_API_KEY;
env NOWNODES_API_KEY;
env ANKR_API_KEY;
env TRON_PRO_API_KEY;
env TON_API_KEY;
env KOIOS_API_TOKEN;
env RPC_PROXY_ENV;
env BTCBOOK_TESTNET_NOWNODES_IO_KEY;
env GO_GETBLOCK_IO_KEY;
env SOL_NOWNODES_API_KEY;
env DRPC_API_KEY_OKTC_TESTNET;
env BTC_NODE_BASIC_AUTH;
env DOGE_NOWNODES_API_KEY;
env TBTC_NODE_BASIC_AUTH;
env CFX_CONFLUXRPC_KEY;
env BLOCKBERRY_API_KEY;
env LTC_NOWNODES_API_KEY;
env BCH_NOWNODES_API_KEY;
env ETHENA_API_KEY;
env EVERSTAKE_API_KEY;
env DYNEX_API_KEY;
env PANORA_API_KEY;

# quiknode env  
env POLISHED_LIGHT_PATINA;
env LINGERING_FITTEST_AURA;
env SKILLED_SERENE_EMERALD;
env FABLED_FREQUENT_BOROUGH;
env RESPONSIVE_LONG_WATER;
env BILLOWING_LIVELY_WAVE;
env SUMMER_COSMOPOLITAN_DREAM;
env FITTEST_ORBITAL_MARKET;
env ORBITAL_YOLO_SMOKE;
env BILLOWING_WEATHERED_WAVE;
env THRILLING_METHODICAL_SAILBOAT;
env BROKEN_DIVINE_MOUNTAIN;
env GREATEST_DAMP_MOUNTAIN;
env TAME_ALIEN_ARM;
env PURPLE_BOLD_HILL;
env CLEAN_SNOWY_LOG;
env BOLD_SKILLED_RIVER;
env PALPABLE_WARMHEARTED_ARROW;
env PROUD_STYLISH_SUNSET;
env FLUENT_COOL_GLITTER;
env QUIET_GREATEST_CLOUD;
env LINGERING_ROUGH_WAVE;
env SHY_FLUENT_LAYER;
env SOLANA_DEVNET_QUICKNODE_KEY;

# slack alert
env SLACK_BOT_TOKEN;
env SLACK_CHANNEL;
env SLACK_ALERT_USER_ID;

http {
    include       /usr/local/openresty/nginx/conf/mime.types;
    server_names_hash_bucket_size 128;

    proxy_headers_hash_max_size 1024;
    proxy_headers_hash_bucket_size 128;

    lua_package_path "/etc/nginx/lualib/proxy_scripts/?.lua;;/etc/nginx/lualib/rpc-proxy/?.lua;;/usr/local/lib/luarocks/rocks/?.lua;;/usr/local/openresty/lualib/?.lua;;/usr/local/openresty/lualib/resty/?.lua;;/usr/local/openresty/lualib/resty/upstream/?.lua;;";
    lua_package_cpath "/usr/local/openresty/lualib/?.so;;";
    lua_ssl_verify_depth 1;

    # evm health check
    lua_shared_dict rpc_endpoints 10m;

    lua_shared_dict api_keys 10m;
    
    lua_shared_dict backends_health 10m;
    lua_shared_dict healthcheck 1m;
    lua_socket_log_errors off;

    lua_shared_dict request_headers 10m;
    lua_need_request_body on;

    client_max_body_size 100m;
    client_body_buffer_size 10m;


    init_worker_by_lua_file /etc/nginx/lualib/rpc-proxy/init_worker.lua;

    default_type  application/octet-stream;
    resolver 8.8.8.8 8.8.4.4 valid=30s ipv6=off;
    resolver_timeout 5s;

    log_format rpc-proxy escape=json
    '{"time_local":"$time_iso8601",'
    '"remote_addr":"$remote_addr",'
    '"remote_user":"$remote_user",'
    '"request":"$request",'
    '"request_headers":"$request_headers",'
    '"request_body":"$request_body",'
    '"request_length":$request_length,'
    '"request_content_length":"$http_content_length",'
    '"status":$status,'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"request_time":$request_time,'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent",'
    '"host":"$host",'
    '"uri":"$uri",'
    '"server_name":"$server_name",'
    '"request_method":"$request_method",'
    '"scheme":"$scheme",'
    '"request_uri":"$request_uri",'
    '"server_protocol":"$server_protocol",'
    '"bytes_sent":"$bytes_sent",'
    '"upstream_response_length":"$upstream_response_length",'
    '"connection":"$connection",'
    '"connection_requests":"$connection_requests",'
    '"msec":"$msec",'
    '"pipe":"$pipe",'
    '"gzip_ratio":"$gzip_ratio",'
    '"https":"$https",'
    '"proxy_pass_url":"$proxy_pass_url",'
    '"response":"$status $body_bytes_sent",'
    '"response_headers":"$response_headers",'
    '"response_body":"$response_body",'
    '"upstream_connect_time":"$upstream_connect_time",'
    '"upstream_header_time":"$upstream_header_time",'
    '"upstream_response_time":"$upstream_response_time",'
    '"request_id":"$http_x_onekey_request_id",'
    '"trace_id":"$http_x_amzn_trace_id"}';

    access_log /etc/nginx/logs/access.log;
    error_log /etc/nginx/logs/error.log debug;

    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    # API keys are now managed in their respective service configurations

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    sendfile        on;
    keepalive_timeout 65;
    keepalive_requests 100;

    server {
        listen 80;

        location /healthz {
            access_log off;
            default_type text/plain;
            return 200 'ok';
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
