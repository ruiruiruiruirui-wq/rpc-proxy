location ~ ^/alchemy/(?<node_type>[^/]+)/v2$ {
    access_log /etc/nginx/logs/alchemy-access.log rpc-proxy;
    error_log /etc/nginx/logs/alchemy-error.log error;

    set_by_lua_block $alchemy_api_key {
        return os.getenv("ALCHEMY_API_KEY") or ""
    }

    set $proxy_host "$node_type.g.alchemy.com";

    proxy_pass https://$proxy_host/v2/$alchemy_api_key;
    proxy_set_header Host $proxy_host;
    proxy_set_header accept-encoding "identity";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_ssl_server_name on;
    proxy_redirect off;
}


location ~ /alchemy/(?<node_type>[^/]+)/(?<path>.+)/(?<method>[^/]+)$ {
    access_log /etc/nginx/logs/alchemy-access.log rpc-proxy;
    error_log /etc/nginx/logs/alchemy-error.log error;
    set_by_lua_block $alchemy_api_key {
        return os.getenv("ALCHEMY_API_KEY") or ""
    }

    set $proxy_host "$node_type.g.alchemy.com";
    # Combine node_type, path, and method
    set $combined_uri "$path/$alchemy_api_key/$method";
    proxy_pass https://$proxy_host/$combined_uri;
    proxy_set_header Host $proxy_host;
    proxy_set_header accept-encoding "identity";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_ssl_server_name on;
    proxy_redirect off;
}
