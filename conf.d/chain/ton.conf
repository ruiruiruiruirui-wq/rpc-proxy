    location /ton/ {
        access_log /etc/nginx/logs/ton-access.log rpc-proxy;
        error_log /etc/nginx/logs/ton-error.log;

        content_by_lua_block {
            local health_checker = require "rpc-proxy.ton"
            local backend = health_checker.get_backend("ton")

            local http = require "resty.http"
            local httpc = http.new()
            httpc:set_timeout(50000)

            local target_uri = backend.url
            local query = ngx.var.args
            if query then
                target_uri = target_uri .. "?" .. query
            end

            ngx.req.read_body()
            local body_data = ngx.req.get_body_data()

            local api_key = backend.apikey
            if not api_key then
                ngx.status = ngx.HTTP_UNAUTHORIZED
                ngx.say("Missing X-API-Key in request headers")
                return ngx.exit(ngx.HTTP_UNAUTHORIZED)
            end

            local res, err = httpc:request_uri(target_uri, {
                method = ngx.var.request_method,
                body = body_data,
                headers = {
                    ["Host"] = backend.host,
                    ["Content-Type"] = ngx.var.content_type,
                    ["X-Forwarded-For"] = ngx.var.remote_addr,
                    ["X-API-Key"] = api_key
                },
                ssl_verify = false
            })

            if not res then
                ngx.log(ngx.ERR, "Request to backend " .. backend.host .. " failed: ", err)
                return ngx.exit(500)
            end

            ngx.ctx.proxy_pass_url = backend.host
            for k, v in pairs(res.headers) do
                ngx.header[k] = v
            end
            ngx.status = res.status
            ngx.say(res.body)
            ngx.exit(ngx.HTTP_OK)
        }

        proxy_set_header accept-encoding "identity";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ssl_server_name on;
        proxy_redirect off;
    }

    location /tonapi/ {
        access_log /etc/nginx/logs/tonapi-access.log rpc-proxy;
        error_log /etc/nginx/logs/tonapi-error.log error;


        set $proxy_host "tonapi.io";
        proxy_pass https://tonapi.io/;

#         set $proxy_host "ton-open-api.nownodes.io";
#         proxy_pass https://ton-open-api.nownodes.io/;

        proxy_set_header Host tonapi.io;
#         proxy_set_header Host ton-open-api.nownodes.io;
        proxy_set_header accept-encoding "identity";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ssl_server_name on;
        proxy_redirect off;
    }

