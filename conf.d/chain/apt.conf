    location /apt/ {
        access_log /etc/nginx/logs/apt-access.log rpc-proxy;
        error_log /etc/nginx/logs/apt-error.log error;

        content_by_lua_block {
            local health_checker = require "rpc-proxy.other"
            local backend = health_checker.get_backend("apt")
    
            local http = require "resty.http"
            local httpc = http.new()
            httpc:set_timeout(50000)
    
            local original_uri = ngx.var.uri
            local path = string.gsub(original_uri, "^/apt/", "")
            local target_uri = backend.url .. path
        
            ngx.req.read_body()
            local body_data = ngx.req.get_body_data()
    
            local res, err = httpc:request_uri(target_uri, {
                method = ngx.var.request_method,
                body = body_data,
                headers = {
                    ["Host"] = backend.host,
                    ["Content-Type"] = ngx.var.content_type,
                    ["X-Forwarded-For"] = ngx.var.remote_addr
                },
                ssl_verify = false
            })
    
            if not res then
                ngx.log(ngx.ERR, "Request to backend " .. backend.host .. " failed: ", err)
                return ngx.exit(500)
            end
    
            ngx.ctx.proxy_pass_url = backend.host
            for k, v in pairs(res.headers) do
                ngx.header[k] = v
            end
            ngx.status = res.status
            ngx.say(res.body)
            ngx.exit(ngx.HTTP_OK)
        }

        proxy_set_header accept-encoding "identity";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ssl_server_name on;
        proxy_redirect off;
    }

