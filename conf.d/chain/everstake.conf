    location /everstake/ {
        access_log /etc/nginx/logs/everstake-access.log rpc-proxy;
        error_log /etc/nginx/logs/everstake-error.log error;

        proxy_pass https://everstake.one/;

        proxy_set_header Host everstake.one;
        proxy_set_header accept-encoding "identity";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ssl_server_name on;
        proxy_redirect off;
    }  

  location /everstake/eth-api-b2c/ {
        access_log /etc/nginx/logs/everstake-eth-api-b2c-access.log rpc-proxy;
        error_log /etc/nginx/logs/everstake-eth-api-b2c-error.log error;

        set $proxy_host "eth-api-b2c.everstake.one";
        proxy_pass https://eth-api-b2c.everstake.one/;

        proxy_set_header Host eth-api-b2c.everstake.one;
        proxy_set_header accept-encoding "identity";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ssl_server_name on;
        proxy_redirect off;
    }

    location /everstake/eth-api-b2c-stage/ {
        access_log /etc/nginx/logs/everstake-eth-api-b2c-stage-access.log rpc-proxy;
        error_log /etc/nginx/logs/everstake-eth-api-b2c-stage-error.log error;

        set $proxy_host "eth-api-b2c-stage.everstake.one";
        proxy_pass https://eth-api-b2c-stage.everstake.one/;

        proxy_set_header Host eth-api-b2c-stage.everstake.one;
        proxy_set_header accept-encoding "identity";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ssl_server_name on;
        proxy_redirect off;
    }

location /everstake/wallet-sdk-api/ {
    access_log /etc/nginx/logs/everstake-wallet-sdk-api-access.log rpc-proxy;
    error_log /etc/nginx/logs/everstake-wallet-sdk-api-error.log error;

    content_by_lua_block {
        -- 记录Lua代码块的启动
        ngx.log(ngx.ERR, "Lua block started")

        -- 获取环境变量中的token
        local token = os.getenv("EVERSTAKE_WALLET_SDK_TOKEN")
        if not token then
            ngx.log(ngx.ERR, "Token not found in environment")
            ngx.status = ngx.HTTP_UNAUTHORIZED
            ngx.say("Unauthorized")
            return
        end

        -- 读取请求体
        ngx.req.read_body()
        local data = ngx.req.get_body_data()

        -- 载入JSON库
        local cjson = require "cjson.safe"
        local json_data = cjson.decode(data)

        if json_data then
            -- 添加token字段
            json_data["token"] = token

            -- 将修改后的JSON编码回字符串
            local new_data = cjson.encode(json_data)

            -- 设置修改后的请求体
            ngx.req.set_body_data(new_data)
        else
            -- 处理JSON解析失败的情况
            ngx.log(ngx.ERR, "Failed to decode JSON")
            ngx.status = ngx.HTTP_BAD_REQUEST
            ngx.say("Invalid JSON")
            return
        end
    }

    set $proxy_host "wallet-sdk-api.everstake.one";
    proxy_pass https://wallet-sdk-api.everstake.one/;

    proxy_set_header Host wallet-sdk-api.everstake.one;
    proxy_set_header accept-encoding "identity";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_ssl_server_name on;
    proxy_redirect off;
}


  location /everstake/stats/ {
        access_log /etc/nginx/logs/everstake-stats-access.log rpc-proxy;
        error_log /etc/nginx/logs/everstake-stats-error.log error;

        proxy_pass https://stats.everstake.one/;

        set_by_lua_block $everstake_api_key {
            return os.getenv("EVERSTAKE_API_KEY") or ""
        }
        proxy_set_header X-Api-Key "$everstake_api_key";

        proxy_set_header Host stats.everstake.one;
        proxy_set_header accept-encoding "identity";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ssl_server_name on;
        proxy_redirect off;
    }
